// Auto-generated MLP weights + pointers for C inference
// Generated from scikit-learn MLPClassifier

#pragma once

#define ALIGN16 __attribute__((aligned(16)))

#define NUM_LAYERS 3

#define NUM_CLASSES 4

static const int LAYER_SIZES[NUM_LAYERS+1] = { 16, 16, 8, 4 };

#define OUTPUT_SIZE 4

// Convenience macros for selecting code paths at compile time
#if OUTPUT_SIZE == 1
    #define IS_BINARY_CLASSIFICATION 1
    #define IS_MULTICLASS_CLASSIFICATION 0
#else
    #define IS_BINARY_CLASSIFICATION 0
    #define IS_MULTICLASS_CLASSIFICATION 1
#endif

// Shape: (16, 16)
static const float W0[256] ALIGN16 = {
    1.512426, 3.600719, -0.359883, -0.203615, -2.586813, -3.173848, -0.038428, -0.392171, 2.007145, -0.399531, -0.699763, 4.333110, -1.867122, -0.280717, 1.778631, 0.478101, 0.623109, -0.486083, 0.716664, 0.022770, 0.376536, -0.069344, -0.726824, -0.056976, -1.245716, -0.003348, -0.672418, -0.179432, -0.256504, -0.587951, -0.340910, -1.840119, -0.839132, 0.043855, 0.228925, 0.054200, 0.285958, -0.916671, 0.363811, -0.461930, -0.412203, 0.060667, -0.531010, 0.061089, 0.074880, -0.275069, 0.115289, 0.181435, -0.261492, -0.428845, 0.977929, 0.963880, 0.869522, 0.205404, -0.301675, -0.291509, 0.006584, -0.736602, -0.611200, -0.302472, 0.169685, 0.555708, 0.735387, 0.776670, 0.539480, -0.416233, -1.180504, 0.731619, 0.427096, 0.911550, -1.181052, -0.318884, 0.427921, 0.212857, 0.534191, 0.131829, -0.575005, 0.114510, -0.089966, 0.532892, -1.514849, 2.888120, 0.752799, -1.709400, 0.361680, 0.528738, 1.752799, 1.011394, 2.624548, 3.084407, 1.905589, 1.256599, 2.893757, -0.824166, 0.338351, -2.941370, 0.493410, -0.002415, 0.681896, -0.795058, -0.103298, 0.430500, 0.175150, 0.489125, 0.591138, -0.736591, 0.310749, -0.478388, -0.085244, -0.276654, 0.601730, 0.042685, 0.919020, 0.093620, -2.953854, 1.613711, -0.873639, -3.396161, 3.152752, -2.976430, -2.076197, -1.806425, 3.250799, -0.839991, 0.753298, -0.106314, 0.329551, 1.208459, -0.544282, -0.138066, -0.805178, -1.215495, -1.324305, 0.228779, 0.845086, -0.975983, -0.507117, 0.903763, -0.245109, -0.743739, 2.252195, 0.037114, -1.043276, -0.093330, 0.024227, 0.008522, -0.010158, -1.294891, -0.086974, -0.841196, -0.376748, -0.351416, -0.832288, -1.587568, -0.648556, 0.035899, 2.943708, -0.247879, -0.221701, 0.707931, 0.106380, -0.233941, -0.382187, -0.075881, -0.572266, 0.332655, -0.542562, -0.044548, -0.456445, 0.116254, 0.385474, 0.194233, 0.266271, 0.068158, 0.631702, 0.405838, 0.123277, 0.150346, -0.090160, -3.530240, 0.112383, -0.394704, -1.034001, 0.438767, 0.996144, 1.453173, 0.034426, 0.907675, -2.468996, -1.906843, -1.970340, 0.371742, 1.514096, -0.029537, 1.637026, 0.399020, 0.126036, 1.201461, 1.026904, 0.496329, -1.076148, -0.081551, -0.007336, 0.372690, 0.472534, 0.165404, -0.570790, 0.219246, 1.031194, -1.519832, 0.883497, 2.273657, 0.821172, -0.859751, 2.518261, 0.930520, -0.506148, -1.457259, 0.520600, 0.114053, -2.197802, -0.606875, 0.876961, 2.167377, -1.213869, -0.188072, 0.084419, 0.548379, -2.689324, 0.858535, 0.135386, -3.831051, -3.324863, 0.593479, 3.710837, -0.175993, -0.513106, 2.667125, -3.084049, -2.396704, -0.329682, 0.707346, 0.740136, -0.105743, -0.005530, 0.663361, 1.105550, 1.473117, -0.319341, 1.730635, -0.332181, -0.262798, 0.594047, 0.679922, -0.195995, 0.416996
};

// Shape: (16,)
static const float B0[16] ALIGN16 = {
    1.534762, 2.033740, -0.184395, -1.506132, -0.743227, -0.633524, -0.708576, -2.193942, -1.584328, 1.041042, 1.895411, 2.098907, 0.886289, 0.520941, 0.197913, 0.419492
};

// Shape: (16, 8)
static const float W1[128] ALIGN16 = {
    -1.522577, -0.232875, -0.545858, 1.668603, 0.843494, 0.830414, 0.933710, 2.533414, 1.166287, -1.893153, 0.292485, 1.996924, -0.372609, 2.834829, 0.201663, 1.479497, -1.324565, -0.153950, 0.855766, -1.380744, 0.780519, 0.725753, 0.225824, -1.938815, 1.603955, -1.264306, 1.250795, -0.838892, -3.858085, -0.951075, 1.330144, -0.549458, -0.325083, 1.030459, -0.876231, 0.477860, 0.705631, -1.227642, -0.307649, -0.472632, -0.200902, 1.638164, 1.899046, 0.022463, -1.402731, -1.504541, 0.141595, -2.265170, -1.850782, -0.155846, -1.059788, -2.296857, 1.112686, 0.212580, 3.347973, -0.303130, -0.743915, -0.103351, -3.256380, 2.184486, -0.621416, -0.941153, -4.033573, -1.570951, -0.111215, -0.907176, -2.082650, -2.767012, -2.178680, 0.111532, -7.118221, -0.664794, 0.299798, 0.816392, 1.864031, -0.786972, 1.043316, 0.678599, -0.595683, -0.033226, -0.504173, -0.266829, -1.638257, 1.346354, -0.128412, 0.067533, -0.937801, -0.552759, 0.152342, -2.977448, 0.441700, -0.867071, 2.967051, 0.926514, 0.424280, -1.159700, -4.070984, -0.272123, -0.370330, -1.123548, 0.076078, 0.019754, -2.537980, -1.264873, 0.395698, -0.601981, 0.939829, -1.335823, 0.289759, 0.622594, 0.458247, 0.712612, 0.895311, 0.614082, -0.076099, 0.889224, 1.204553, 1.507879, -0.749765, 0.463295, -2.092308, -1.579049, -0.151917, 2.318669, 0.866184, 0.678437, 0.015495, 1.005160
};

// Shape: (8,)
static const float B1[8] ALIGN16 = {
    0.288690, -0.259207, -0.817169, -0.152038, 0.581981, 0.864382, 0.599885, 0.094370
};

// Shape: (8, 4)
static const float W2[32] ALIGN16 = {
    1.778759, 1.419533, -3.381864, -0.214896, 2.921345, -0.265696, 0.977877, -1.947482, -3.092308, -1.819698, 2.451528, 0.171998, 2.406372, -0.397981, -3.558775, 0.815499, -1.361514, 2.025012, -1.427204, 0.156775, 1.600898, -2.939783, 1.006956, 1.058643, -0.651830, -4.630555, -1.085601, 4.098585, -4.384742, 3.844365, -2.509450, -3.315041
};

// Shape: (4,)
static const float B2[4] ALIGN16 = {
    -5.537607, 0.533466, 0.303991, 1.035136
};

// Weight & bias pointers per layer
static const float *WEIGHTS[NUM_LAYERS] = { W0, W1, W2 };
static const float *BIASES[NUM_LAYERS]  = { B0, B1, B2 };

#undef ALIGN16
